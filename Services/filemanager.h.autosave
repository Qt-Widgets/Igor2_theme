#ifndef ADMIN_GUI_SERVICES_FILEANDICONMANAGER_H
#define ADMIN_GUI_SERVICES_FILEANDICONMANAGER_H
#include <QString>
#include <QList>
#include <QProcess>
#include <QStandardItemModel>

#include <Structs/programstruct.h>

#include <Services/terminal.h>

class FileExplorer
{
public:

    FileExplorer(Terminal *terminal);

    ~FileExplorer();

    void setPath(QString &path);

    void addIcon(const QString &exec, const QString &iconPath, const QString &iconName, const QString &comment);

    void deleteIcon(const QString &iconName);

    QStandardItemModel *getModel(){return m_model;}

private:

    void updateLocalDataAndModel();

    void updateIconsList();

    void updateModel();
private:

    Terminal *m_terminal;

    QString m_path;

    QList<DesktopEntity> *m_DesktopEntitesList;

    QStandardItemModel *m_model;

private:

    QStringList getAllDesktopEntities();

    QString getEveryEntityInfo(const QString &entityName);

    void appendIconInfoToList(const QString &programName, const QString &iconInfo);

    void appendFileInfoToList(const QString &fileName);

    bool isEntityIcon(const QString &entityInfo) const;

    void createIconFile(const QString &iconName);

    QString createIconProperties(const QString &exec, const QString &imagePath, const QString &iconName, const QString &comment);

    void writeIconPropertiesToFile(QString &iconProperties, const QString &iconName);
};

#endif // ADMIN_GUI_SERVICES_FILEANDICONMANAGER_H
